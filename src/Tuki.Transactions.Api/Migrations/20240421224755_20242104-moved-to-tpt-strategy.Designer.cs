// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tuki.Transactions.Api.Infrastructure.Context;

#nullable disable

namespace Tuki.Transactions.Api.Migrations
{
    [DbContext(typeof(TransactionsContext))]
    [Migration("20240421224755_20242104-moved-to-tpt-strategy")]
    partial class _20242104movedtotptstrategy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Transaction")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tuki.Transactions.Api.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trace")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TransactionId");

                    b.HasIndex("Trace");

                    b.HasIndex("Type", "Trace");

                    b.ToTable("Transactions", "Transaction");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Tuki.Transactions.Api.Models.Payment", b =>
                {
                    b.HasBaseType("Tuki.Transactions.Api.Models.Transaction");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("Payments", "Transaction");
                });

            modelBuilder.Entity("Tuki.Transactions.Api.Models.Payment", b =>
                {
                    b.HasOne("Tuki.Transactions.Api.Models.Transaction", null)
                        .WithOne()
                        .HasForeignKey("Tuki.Transactions.Api.Models.Payment", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
